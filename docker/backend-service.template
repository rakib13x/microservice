# Build stage
FROM node:23.10.0-alpine AS base
WORKDIR /app

# Copy workspace configuration
COPY package*.json ./
COPY nx.json tsconfig.base.json ./

# Install only production dependencies
RUN npm ci --only=production --legacy-peer-deps

# Copy shared packages and generate Prisma
COPY packages ./packages
COPY prisma ./prisma
RUN npx prisma generate

# Clean up to reduce size
RUN npm cache clean --force

# Build stage
FROM node:23.10.0-alpine AS builder
WORKDIR /app

# Copy workspace files
COPY package*.json ./
COPY nx.json tsconfig.base.json ./
RUN npm ci --legacy-peer-deps

# Declare ARG before using it
ARG SERVICE_NAME

# Copy service source
COPY apps/${SERVICE_NAME} ./apps/${SERVICE_NAME}
COPY packages ./packages
COPY prisma ./prisma

# Build the service
RUN npx nx build ${SERVICE_NAME}

# Production stage
FROM node:23.10.0-alpine AS production
WORKDIR /app

# Declare ARG in production stage
ARG SERVICE_NAME
ARG PORT

# Copy built artifacts from base
COPY --from=base /app/node_modules ./node_modules
COPY --from=base /app/packages ./packages
COPY --from=base /app/prisma ./prisma

# Copy built service from the correct location (apps/SERVICE_NAME/dist/)
COPY --from=builder /app/apps/${SERVICE_NAME}/dist ./dist

EXPOSE ${PORT}

CMD ["node", "dist/main.js"]